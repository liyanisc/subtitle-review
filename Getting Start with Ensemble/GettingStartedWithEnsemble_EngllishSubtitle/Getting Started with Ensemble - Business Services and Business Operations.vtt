WEBVTT

00:00:00.000 --> 00:00:01.750 align:middle line:90%


00:00:01.750 --> 00:00:03.750 align:middle line:84%
Welcome to the
eLearning session,

00:00:03.750 --> 00:00:07.370 align:middle line:84%
"Getting Started with Ensemble--
Business Services and Business

00:00:07.370 --> 00:00:11.280 align:middle line:90%
Operations."

00:00:11.280 --> 00:00:14.310 align:middle line:84%
This session will cover
configuring Business Service

00:00:14.310 --> 00:00:17.430 align:middle line:84%
and Business Operation
components of an Ensemble

00:00:17.430 --> 00:00:19.990 align:middle line:84%
Production to communicate
with applications

00:00:19.990 --> 00:00:23.450 align:middle line:90%
external to Ensemble.

00:00:23.450 --> 00:00:27.330 align:middle line:84%
A Business Service handles
inbound connections,

00:00:27.330 --> 00:00:32.040 align:middle line:84%
while a Business Operation
handles outbound connections.

00:00:32.040 --> 00:00:35.600 align:middle line:84%
Common protocols,
such as X12 and HL7

00:00:35.600 --> 00:00:39.050 align:middle line:84%
are supported by pre-built
Business Services and Business

00:00:39.050 --> 00:00:39.950 align:middle line:90%
Operations.

00:00:39.950 --> 00:00:42.270 align:middle line:84%
But in many cases,
users will want

00:00:42.270 --> 00:00:45.160 align:middle line:84%
to build their own custom
Business Services and Business

00:00:45.160 --> 00:00:46.350 align:middle line:90%
Operations.

00:00:46.350 --> 00:00:49.870 align:middle line:84%
This is a programming task
in the Ensemble Studio.

00:00:49.870 --> 00:00:52.460 align:middle line:84%
In many cases, it's
a fairly simple task.

00:00:52.460 --> 00:00:57.210 align:middle line:84%
But like any programming, it can
become as complex as required

00:00:57.210 --> 00:01:00.490 align:middle line:90%
by your Ensemble solution.

00:01:00.490 --> 00:01:04.080 align:middle line:84%
Let's first look at creating
a custom Business Operation

00:01:04.080 --> 00:01:06.790 align:middle line:90%
and adding it to a Production.

00:01:06.790 --> 00:01:10.140 align:middle line:84%
And adapter can be used to
handle the specific technology

00:01:10.140 --> 00:01:13.630 align:middle line:84%
and protocol to communicate
with the external applications,

00:01:13.630 --> 00:01:17.940 align:middle line:84%
such as SQL, Web Services,
email, or an operating system

00:01:17.940 --> 00:01:19.310 align:middle line:90%
file.

00:01:19.310 --> 00:01:22.120 align:middle line:84%
The Message Map
defines which method

00:01:22.120 --> 00:01:25.690 align:middle line:90%
handles a request message type.

00:01:25.690 --> 00:01:27.820 align:middle line:84%
The general idea
is that you will

00:01:27.820 --> 00:01:30.680 align:middle line:84%
use the Studio wizard
to create a class that

00:01:30.680 --> 00:01:35.390 align:middle line:84%
is a subclass of
ENS.BusinessOperation,

00:01:35.390 --> 00:01:38.430 align:middle line:84%
and select the appropriate
outbound adapter.

00:01:38.430 --> 00:01:42.560 align:middle line:84%
You can then implement a method,
as defined in the Message Map,

00:01:42.560 --> 00:01:46.310 align:middle line:84%
to handle each type of
message the Business Operation

00:01:46.310 --> 00:01:47.610 align:middle line:90%
receives.

00:01:47.610 --> 00:01:51.410 align:middle line:84%
Typically, your method will
call methods of the adapter

00:01:51.410 --> 00:01:55.110 align:middle line:90%
to do most of the work.

00:01:55.110 --> 00:01:58.470 align:middle line:84%
We will use Studio to create
a very simple Business

00:01:58.470 --> 00:02:01.390 align:middle line:84%
Operation that receives
an object with a property

00:02:01.390 --> 00:02:03.980 align:middle line:84%
containing a line of
text and sends this

00:02:03.980 --> 00:02:05.760 align:middle line:90%
to an email recipient.

00:02:05.760 --> 00:02:10.470 align:middle line:84%
We will make the email subject
a configurable setting.

00:02:10.470 --> 00:02:15.940 align:middle line:84%
In Studio we will
choose File, New.

00:02:15.940 --> 00:02:22.860 align:middle line:84%
And in the production tab we
will select Business Operation.

00:02:22.860 --> 00:02:26.080 align:middle line:90%
The class will be eLearning.

00:02:26.080 --> 00:02:28.975 align:middle line:84%
And the class name
will be MailOperation.

00:02:28.975 --> 00:02:32.110 align:middle line:90%


00:02:32.110 --> 00:02:36.980 align:middle line:84%
When I click Next,
I'll be able to choose

00:02:36.980 --> 00:02:48.980 align:middle line:84%
the email outbound adapter and
create the SendLine method that

00:02:48.980 --> 00:02:54.240 align:middle line:84%
will receive a request
type of ENS.StringRequest.

00:02:54.240 --> 00:03:07.150 align:middle line:90%


00:03:07.150 --> 00:03:09.855 align:middle line:84%
The class that gets
created extends

00:03:09.855 --> 00:03:10.980 align:middle line:90%
from ENS.BusinessOperation.

00:03:10.980 --> 00:03:13.570 align:middle line:90%


00:03:13.570 --> 00:03:16.580 align:middle line:84%
The ADAPTER parameter
and Adapter property

00:03:16.580 --> 00:03:21.110 align:middle line:84%
have been properly set for
an email outbound adapter.

00:03:21.110 --> 00:03:24.690 align:middle line:84%
We also have a stub for
the SendLiine method.

00:03:24.690 --> 00:03:28.170 align:middle line:84%
We will add our code
in just a moment.

00:03:28.170 --> 00:03:30.730 align:middle line:84%
We also have the
Message Map created

00:03:30.730 --> 00:03:34.610 align:middle line:84%
that identifies when a
string request is received

00:03:34.610 --> 00:03:36.970 align:middle line:90%
to call the SendLine method.

00:03:36.970 --> 00:03:40.920 align:middle line:90%


00:03:40.920 --> 00:03:46.120 align:middle line:84%
I have added the code
for the SendLine method.

00:03:46.120 --> 00:03:51.990 align:middle line:84%
We are creating a
mail message object.

00:03:51.990 --> 00:03:55.420 align:middle line:84%
Identifying this
subject-- at this time

00:03:55.420 --> 00:03:58.310 align:middle line:84%
it will be eLearning
demonstration.

00:03:58.310 --> 00:04:01.470 align:middle line:84%
We take the string
value of our request

00:04:01.470 --> 00:04:03.890 align:middle line:84%
object that comes
into this method

00:04:03.890 --> 00:04:09.200 align:middle line:84%
and that becomes the
text of our message.

00:04:09.200 --> 00:04:16.410 align:middle line:84%
Then we send the email using
the email outbound adapter

00:04:16.410 --> 00:04:19.310 align:middle line:90%
to accomplish this.

00:04:19.310 --> 00:04:24.120 align:middle line:84%
The recipient location of the
SMTP server and other details

00:04:24.120 --> 00:04:27.350 align:middle line:84%
could be programmed
here as well.

00:04:27.350 --> 00:04:30.730 align:middle line:84%
But I will add them to
the configuration settings

00:04:30.730 --> 00:04:33.600 align:middle line:84%
once this Business
Operation is added

00:04:33.600 --> 00:04:36.450 align:middle line:90%
to my Ensemble Production.

00:04:36.450 --> 00:04:41.210 align:middle line:84%
Now, at this point, we've
hard coded the subject.

00:04:41.210 --> 00:04:43.360 align:middle line:84%
We're going to
add some code that

00:04:43.360 --> 00:04:46.720 align:middle line:84%
will allow us to put the
subject into the configuration

00:04:46.720 --> 00:04:48.800 align:middle line:90%
settings.

00:04:48.800 --> 00:05:13.975 align:middle line:84%
So I will add a new
parameter and a new property.

00:05:13.975 --> 00:05:32.630 align:middle line:90%


00:05:32.630 --> 00:05:45.715 align:middle line:84%
I can now modify my subject to
be set from the configuration

00:05:45.715 --> 00:05:46.215 align:middle line:90%
settings.

00:05:46.215 --> 00:05:49.320 align:middle line:90%


00:05:49.320 --> 00:05:52.910 align:middle line:84%
I'll comment out
my original code

00:05:52.910 --> 00:05:56.710 align:middle line:84%
so we have that as a reference
and add additional code.

00:05:56.710 --> 00:06:13.890 align:middle line:90%


00:06:13.890 --> 00:06:15.660 align:middle line:84%
If you want this
Business Operation

00:06:15.660 --> 00:06:18.370 align:middle line:84%
to handle different
types of requests,

00:06:18.370 --> 00:06:21.210 align:middle line:84%
you can add a new message
type to the Message Map

00:06:21.210 --> 00:06:24.440 align:middle line:84%
and implement the appropriate
method to handle this.

00:06:24.440 --> 00:06:29.140 align:middle line:84%
Once I compile the
class, we won't

00:06:29.140 --> 00:06:34.980 align:middle line:84%
be able to add it to
our Ensemble Production.

00:06:34.980 --> 00:06:37.800 align:middle line:84%
Let's go to the Ensemble
Management Portal

00:06:37.800 --> 00:06:42.810 align:middle line:84%
so we can add this Business
Operation to the Production.

00:06:42.810 --> 00:06:48.350 align:middle line:84%
Here's an empty Production
that is already running.

00:06:48.350 --> 00:06:54.790 align:middle line:84%
And I'm going to add the
Business Operation we just

00:06:54.790 --> 00:06:55.290 align:middle line:90%
created.

00:06:55.290 --> 00:06:58.540 align:middle line:90%


00:06:58.540 --> 00:07:00.480 align:middle line:90%
I will call it MailOperation.

00:07:00.480 --> 00:07:04.330 align:middle line:90%


00:07:04.330 --> 00:07:05.335 align:middle line:90%
And it will be Enabled.

00:07:05.335 --> 00:07:17.260 align:middle line:90%


00:07:17.260 --> 00:07:20.980 align:middle line:84%
In my settings for
the MailOperation,

00:07:20.980 --> 00:07:24.850 align:middle line:90%
I can define the SMTP server.

00:07:24.850 --> 00:07:31.210 align:middle line:90%


00:07:31.210 --> 00:07:38.420 align:middle line:84%
My credentials that
I've already set up,

00:07:38.420 --> 00:07:42.070 align:middle line:84%
as a cell configuration, could
be added here if required.

00:07:42.070 --> 00:07:50.080 align:middle line:90%


00:07:50.080 --> 00:08:01.830 align:middle line:84%
And I can identify the recipient
of an email, who its from.

00:08:01.830 --> 00:08:08.560 align:middle line:90%


00:08:08.560 --> 00:08:12.200 align:middle line:84%
My configurable Subject can
be filled in right here.

00:08:12.200 --> 00:08:25.080 align:middle line:90%


00:08:25.080 --> 00:08:26.260 align:middle line:90%
And we can Apply this.

00:08:26.260 --> 00:08:31.660 align:middle line:90%


00:08:31.660 --> 00:08:36.260 align:middle line:84%
At this time, we should test
to make sure this works.

00:08:36.260 --> 00:08:42.179 align:middle line:84%
So I'll go to the Actions
tab and choose Test.

00:08:42.179 --> 00:08:47.920 align:middle line:84%
And since this operation
takes a string request,

00:08:47.920 --> 00:08:56.170 align:middle line:84%
I have a window that allows
me to enter my string request

00:08:56.170 --> 00:08:59.510 align:middle line:90%
and invoke the testing service.

00:08:59.510 --> 00:09:01.970 align:middle line:84%
And we have a
successful completion

00:09:01.970 --> 00:09:04.226 align:middle line:90%
of our Business Operation.

00:09:04.226 --> 00:09:10.920 align:middle line:90%


00:09:10.920 --> 00:09:13.195 align:middle line:84%
Now let's look at
a Business Service.

00:09:13.195 --> 00:09:17.230 align:middle line:84%
A Business Service accepts input
from external applications,

00:09:17.230 --> 00:09:20.520 align:middle line:84%
either directly or via
an inbound adapter.

00:09:20.520 --> 00:09:24.540 align:middle line:84%
Adapters can be configured to
look for input on a time basis

00:09:24.540 --> 00:09:27.375 align:middle line:90%
or to listen on a TCP/IP socket.

00:09:27.375 --> 00:09:30.310 align:middle line:90%


00:09:30.310 --> 00:09:33.560 align:middle line:84%
When it has input the
process, the adapter

00:09:33.560 --> 00:09:37.710 align:middle line:84%
calls the ProcessInput method
of the Business Service,

00:09:37.710 --> 00:09:41.470 align:middle line:84%
which in turn calls the
OnProcessInput method.

00:09:41.470 --> 00:09:44.300 align:middle line:84%
If you're writing a
custom Business Service,

00:09:44.300 --> 00:09:47.250 align:middle line:84%
you must write the
OnProcessInput method

00:09:47.250 --> 00:09:50.110 align:middle line:84%
to handle the work of
processing the inbound request

00:09:50.110 --> 00:09:53.490 align:middle line:84%
and calling either a Business
Process or a Business

00:09:53.490 --> 00:09:55.130 align:middle line:90%
Operation.

00:09:55.130 --> 00:09:57.960 align:middle line:84%
If you specify an adapter,
the Business Services

00:09:57.960 --> 00:10:00.200 align:middle line:84%
started when the
Production is started

00:10:00.200 --> 00:10:03.180 align:middle line:84%
and will continue listening
or pulling for information.

00:10:03.180 --> 00:10:06.450 align:middle line:84%
If you don't use an adapter,
the Business Service

00:10:06.450 --> 00:10:10.140 align:middle line:84%
must be instantiated from some
Ensemble application code.

00:10:10.140 --> 00:10:13.510 align:middle line:84%
This could be a web service,
a web page, stored procedure,

00:10:13.510 --> 00:10:16.890 align:middle line:84%
or any other freestanding
Ensemble application.

00:10:16.890 --> 00:10:19.620 align:middle line:90%


00:10:19.620 --> 00:10:22.330 align:middle line:84%
Let's go back to Studio and
create a custom Business

00:10:22.330 --> 00:10:25.680 align:middle line:90%
Service that uses an adapter.

00:10:25.680 --> 00:10:27.450 align:middle line:90%
So I will click File, New.

00:10:27.450 --> 00:10:29.960 align:middle line:90%


00:10:29.960 --> 00:10:35.740 align:middle line:84%
And in the Production tab, I
will select Business Service.

00:10:35.740 --> 00:10:38.776 align:middle line:84%
eLearning will still
be the package name,

00:10:38.776 --> 00:10:43.340 align:middle line:84%
but the class name will
be MyBusinessService.

00:10:43.340 --> 00:10:47.690 align:middle line:90%


00:10:47.690 --> 00:10:53.330 align:middle line:84%
I will now choose the
file inbound adapter.

00:10:53.330 --> 00:10:57.220 align:middle line:84%
And when I click Finish,
my class is created.

00:10:57.220 --> 00:10:59.330 align:middle line:84%
And you can see
that this inherits

00:10:59.330 --> 00:11:04.930 align:middle line:84%
from ENS.BusinessService the
ADAPTER parameter has been set

00:11:04.930 --> 00:11:07.230 align:middle line:90%
for the file inbound adapter.

00:11:07.230 --> 00:11:12.020 align:middle line:84%
And I have a basic template
for the OnProcessInput method.

00:11:12.020 --> 00:11:16.370 align:middle line:84%
And since we are using
file inbound adapter,

00:11:16.370 --> 00:11:21.790 align:middle line:84%
the wizard knows that my
input will be a stream object.

00:11:21.790 --> 00:11:24.310 align:middle line:90%


00:11:24.310 --> 00:11:27.140 align:middle line:84%
In the case of the
file inbound adapter,

00:11:27.140 --> 00:11:30.870 align:middle line:84%
OnProcessInput is called
once for every file picked up

00:11:30.870 --> 00:11:31.940 align:middle line:90%
by the adapter.

00:11:31.940 --> 00:11:33.970 align:middle line:84%
And the entire
contents of the file

00:11:33.970 --> 00:11:36.270 align:middle line:84%
is passed to the
method as a stream.

00:11:36.270 --> 00:11:39.430 align:middle line:84%
So we need to process
each line in the file,

00:11:39.430 --> 00:11:41.450 align:middle line:84%
create an appropriate
request message

00:11:41.450 --> 00:11:44.860 align:middle line:84%
to be sent to either a
Business Process or a Business

00:11:44.860 --> 00:11:47.370 align:middle line:90%
Operation.

00:11:47.370 --> 00:11:53.880 align:middle line:84%
If my adapter required
a return message,

00:11:53.880 --> 00:12:00.560 align:middle line:84%
I would need to construct
that object as my output

00:12:00.560 --> 00:12:03.780 align:middle line:90%
property for unprocessed input.

00:12:03.780 --> 00:12:06.650 align:middle line:84%
However, the file
inbound adapter

00:12:06.650 --> 00:12:09.720 align:middle line:84%
does not expect any
type of response.

00:12:09.720 --> 00:12:12.375 align:middle line:84%
And anything sent back
to it will be ignored.

00:12:12.375 --> 00:12:15.570 align:middle line:90%


00:12:15.570 --> 00:12:22.070 align:middle line:84%
Here, I've added the code for
the OnProcessInput method.

00:12:22.070 --> 00:12:27.570 align:middle line:84%
We are looping through every
line in the stream object.

00:12:27.570 --> 00:12:32.600 align:middle line:84%
The ReadLine method
of my stream object

00:12:32.600 --> 00:12:36.490 align:middle line:84%
will return each line,
one line at a time,

00:12:36.490 --> 00:12:39.170 align:middle line:90%
into my input line variable.

00:12:39.170 --> 00:12:41.860 align:middle line:90%


00:12:41.860 --> 00:12:45.600 align:middle line:84%
I then create a
new string request,

00:12:45.600 --> 00:12:50.370 align:middle line:84%
insert my text into the string
value of that string request,

00:12:50.370 --> 00:12:53.300 align:middle line:84%
and send this request
asynchronously

00:12:53.300 --> 00:12:57.230 align:middle line:84%
to the MailOperation
Business Operation

00:12:57.230 --> 00:12:58.785 align:middle line:90%
that we created earlier.

00:12:58.785 --> 00:13:03.140 align:middle line:90%


00:13:03.140 --> 00:13:07.140 align:middle line:84%
Once I compile my
Business Service,

00:13:07.140 --> 00:13:10.460 align:middle line:84%
I can then add it
to my Production.

00:13:10.460 --> 00:13:15.650 align:middle line:84%
So let's return to
the Ensemble Portal

00:13:15.650 --> 00:13:19.652 align:middle line:84%
and go to Add the
Business Service.

00:13:19.652 --> 00:13:27.245 align:middle line:84%
And we will select the Business
Service we just created.

00:13:27.245 --> 00:13:32.340 align:middle line:90%


00:13:32.340 --> 00:13:38.865 align:middle line:84%
And we will call it
MyBusinessService.

00:13:38.865 --> 00:13:41.550 align:middle line:90%


00:13:41.550 --> 00:13:42.960 align:middle line:90%
And it will be Enabled.

00:13:42.960 --> 00:13:50.900 align:middle line:90%


00:13:50.900 --> 00:13:57.580 align:middle line:84%
Now we can select this Business
Service and apply the settings.

00:13:57.580 --> 00:14:07.450 align:middle line:90%


00:14:07.450 --> 00:14:16.930 align:middle line:84%
We will define a File Path
for the messages coming in

00:14:16.930 --> 00:14:22.930 align:middle line:84%
and the File Spec for any file
that is in that directory.

00:14:22.930 --> 00:14:28.020 align:middle line:84%
And we will pick up anything
that is a text file.

00:14:28.020 --> 00:14:31.870 align:middle line:84%
The Archive Path is
where the message

00:14:31.870 --> 00:14:34.670 align:middle line:84%
will be stored once it
has been processed so we

00:14:34.670 --> 00:14:36.410 align:middle line:90%
have a backup copy of that.

00:14:36.410 --> 00:14:46.496 align:middle line:90%


00:14:46.496 --> 00:14:48.235 align:middle line:90%
And we'll Apply these settings.

00:14:48.235 --> 00:14:53.720 align:middle line:90%


00:14:53.720 --> 00:15:03.470 align:middle line:84%
By clicking on the green
dot next to our service,

00:15:03.470 --> 00:15:07.530 align:middle line:84%
we can see visually
that MyBusinessService

00:15:07.530 --> 00:15:11.450 align:middle line:84%
is sending its message
to the mail operation.

00:15:11.450 --> 00:15:16.000 align:middle line:84%
So once we put a file into
the appropriate directory,

00:15:16.000 --> 00:15:18.710 align:middle line:84%
in this case the
inbound directory,

00:15:18.710 --> 00:15:20.610 align:middle line:84%
and the Business
Service picks it up,

00:15:20.610 --> 00:15:25.910 align:middle line:84%
it will pass that information
onto the MailOperation

00:15:25.910 --> 00:15:30.600 align:middle line:84%
as a string request, which will
then in turn send the email.

00:15:30.600 --> 00:15:33.750 align:middle line:90%
So let's test this.

00:15:33.750 --> 00:15:38.240 align:middle line:84%
If we take a look at
the inbound directory,

00:15:38.240 --> 00:15:40.750 align:middle line:90%
you can see that it is empty.

00:15:40.750 --> 00:15:52.880 align:middle line:84%
We will create a
simple text file

00:15:52.880 --> 00:15:58.880 align:middle line:84%
and store it in the inbound
directory, where the Business

00:15:58.880 --> 00:16:11.590 align:middle line:84%
Service will pick it
up and process it.

00:16:11.590 --> 00:16:17.840 align:middle line:90%


00:16:17.840 --> 00:16:20.600 align:middle line:84%
As you can see, the
Business Service

00:16:20.600 --> 00:16:27.880 align:middle line:84%
has picked up my test message,
processed it, sent the email,

00:16:27.880 --> 00:16:33.515 align:middle line:84%
and put a duplicate into
my archive directory.

00:16:33.515 --> 00:16:36.830 align:middle line:90%


00:16:36.830 --> 00:16:39.140 align:middle line:84%
You have been watching
"Getting Started

00:16:39.140 --> 00:16:42.220 align:middle line:84%
with Ensemble-- Business
Services and Business

00:16:42.220 --> 00:16:43.470 align:middle line:90%
Operations."

00:16:43.470 --> 00:16:45.123 align:middle line:90%
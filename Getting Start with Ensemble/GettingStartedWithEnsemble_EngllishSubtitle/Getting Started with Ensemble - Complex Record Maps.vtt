WEBVTT

00:00:00.000 --> 00:00:11.220 align:middle line:90%


00:00:11.220 --> 00:00:13.120 align:middle line:84%
Welcome to the
eLearning session,

00:00:13.120 --> 00:00:17.460 align:middle line:84%
Getting Started with
Ensemble: Complex Record Maps.

00:00:17.460 --> 00:00:21.290 align:middle line:84%
The Record Mapper was
introduced in Release 2012.1

00:00:21.290 --> 00:00:23.620 align:middle line:84%
to provide an easy
interface for handling

00:00:23.620 --> 00:00:25.600 align:middle line:84%
the limited or
fixed-width files.

00:00:25.600 --> 00:00:27.620 align:middle line:84%
It provides support
for complex structures

00:00:27.620 --> 00:00:30.330 align:middle line:84%
with configurable
delimiters, nested fields,

00:00:30.330 --> 00:00:33.010 align:middle line:84%
and control over the
generated object model.

00:00:33.010 --> 00:00:36.820 align:middle line:84%
However, it is restricted to
files where all records have

00:00:36.820 --> 00:00:37.970 align:middle line:90%
the same structure.

00:00:37.970 --> 00:00:42.420 align:middle line:84%
But Complex Record Mapper,
introduced in Release 2013.1,

00:00:42.420 --> 00:00:46.640 align:middle line:84%
is designed to handle situations
where file has a mix of lines

00:00:46.640 --> 00:00:48.150 align:middle line:90%
with different structures.

00:00:48.150 --> 00:00:50.730 align:middle line:84%
To use the Complex
Record Mapper on a file,

00:00:50.730 --> 00:00:54.220 align:middle line:84%
it must be possible to
map all individual records

00:00:54.220 --> 00:00:55.790 align:middle line:90%
with the normal Record Mapper.

00:00:55.790 --> 00:00:57.630 align:middle line:84%
Then the individual
record maps are

00:00:57.630 --> 00:01:01.100 align:middle line:84%
used to define the
complex record map.

00:01:01.100 --> 00:01:05.290 align:middle line:84%
The simplest case is a file
with a header or trail records.

00:01:05.290 --> 00:01:10.320 align:middle line:84%
But complex record mapping also
supports repeated sequences

00:01:10.320 --> 00:01:13.890 align:middle line:84%
of different types of
records in the same file,

00:01:13.890 --> 00:01:17.670 align:middle line:84%
as in the example of the
semester, student, and class

00:01:17.670 --> 00:01:18.170 align:middle line:90%
information.

00:01:18.170 --> 00:01:21.040 align:middle line:84%
A very simple example
would be the file

00:01:21.040 --> 00:01:24.200 align:middle line:84%
with all of this
information for one student.

00:01:24.200 --> 00:01:27.990 align:middle line:84%
Except in the simplest case,
the leading data for each record

00:01:27.990 --> 00:01:30.390 align:middle line:84%
must identify the
type of each record.

00:01:30.390 --> 00:01:32.310 align:middle line:84%
Here, the leading
four characters

00:01:32.310 --> 00:01:33.940 align:middle line:90%
indicate the record type.

00:01:33.940 --> 00:01:38.740 align:middle line:84%
And you can see a semester
record starting with SEM |.

00:01:38.740 --> 00:01:42.220 align:middle line:84%
A student record
starts with STU |.

00:01:42.220 --> 00:01:44.610 align:middle line:84%
And the details of all
the classes the student

00:01:44.610 --> 00:01:48.480 align:middle line:90%
is attending starts with CLS |.

00:01:48.480 --> 00:01:52.840 align:middle line:84%
The data itself is delimited by
semicolons in all the records.

00:01:52.840 --> 00:01:55.880 align:middle line:84%
To create a complex
record map, the first step

00:01:55.880 --> 00:01:59.220 align:middle line:84%
is to create a record map for
each line that could possibly

00:01:59.220 --> 00:02:00.280 align:middle line:90%
occur in the file.

00:02:00.280 --> 00:02:02.710 align:middle line:84%
In this case, we will have
three possible records.

00:02:02.710 --> 00:02:04.690 align:middle line:84%
We will look at each
one of these in turn

00:02:04.690 --> 00:02:07.240 align:middle line:90%
in the ENSDEMO namespace.

00:02:07.240 --> 00:02:09.130 align:middle line:84%
In the Ensemble
Management Portal,

00:02:09.130 --> 00:02:13.620 align:middle line:84%
we will go to Ensemble,
Build, Record Maps.

00:02:13.620 --> 00:02:16.460 align:middle line:84%
And let's open the record
maps that we've already

00:02:16.460 --> 00:02:22.200 align:middle line:84%
created for the semester,
student, and class layouts.

00:02:22.200 --> 00:02:27.420 align:middle line:84%
First, we will take a look at
the SemesterHeader information.

00:02:27.420 --> 00:02:29.750 align:middle line:84%
Here, we see the
SemesterHeader record

00:02:29.750 --> 00:02:31.530 align:middle line:90%
defined by a normal record map.

00:02:31.530 --> 00:02:33.050 align:middle line:90%
It has four fields.

00:02:33.050 --> 00:02:35.320 align:middle line:84%
It uses a semicolon
as a delimiter.

00:02:35.320 --> 00:02:40.240 align:middle line:84%
But most importantly, it
has the leading data SEM |.

00:02:40.240 --> 00:02:45.010 align:middle line:84%
Also, be sure that Allow Complex
Record Mapping is checked.

00:02:45.010 --> 00:02:46.680 align:middle line:90%
This record map is very simple.

00:02:46.680 --> 00:02:49.730 align:middle line:84%
But it could use any of the
features of the Record Mapper.

00:02:49.730 --> 00:02:52.370 align:middle line:84%
When developing the
individual record maps,

00:02:52.370 --> 00:02:56.770 align:middle line:84%
you may want to create a sample
text file for each record type,

00:02:56.770 --> 00:03:01.680 align:middle line:84%
as we've done here, so you can
verify that your record map is

00:03:01.680 --> 00:03:02.630 align:middle line:90%
accurate.

00:03:02.630 --> 00:03:05.182 align:middle line:84%
Then let's take a look
at the student record. .

00:03:05.182 --> 00:03:10.270 align:middle line:90%


00:03:10.270 --> 00:03:12.070 align:middle line:84%
Again, the student
record is very simple.

00:03:12.070 --> 00:03:13.110 align:middle line:90%
It has seven fields.

00:03:13.110 --> 00:03:15.870 align:middle line:84%
It uses the same delimiter
as the semester header.

00:03:15.870 --> 00:03:16.960 align:middle line:90%
But it didn't have to.

00:03:16.960 --> 00:03:20.290 align:middle line:90%
The leading data is STU |.

00:03:20.290 --> 00:03:23.005 align:middle line:84%
And finally, we will look
at the class information.

00:03:23.005 --> 00:03:27.260 align:middle line:90%


00:03:27.260 --> 00:03:32.210 align:middle line:84%
And it has four fields
with leading data CLS |.

00:03:32.210 --> 00:03:35.680 align:middle line:84%
The Complex Record Mapper
will use the leading data

00:03:35.680 --> 00:03:39.110 align:middle line:84%
to identify each type of
record it is processing.

00:03:39.110 --> 00:03:41.310 align:middle line:84%
Now, let's create the
complex record map

00:03:41.310 --> 00:03:47.320 align:middle line:84%
by going to Ensemble,
Build, Complex Record Maps.

00:03:47.320 --> 00:03:55.360 align:middle line:84%
We will create a new record map
called eLearning.OneStudent.

00:03:55.360 --> 00:04:01.100 align:middle line:90%


00:04:01.100 --> 00:04:04.880 align:middle line:84%
In our example, the semester
record is the header.

00:04:04.880 --> 00:04:06.930 align:middle line:90%
So we will click on Header.

00:04:06.930 --> 00:04:15.750 align:middle line:84%
Provide a name, and select
the SemesterHeader record map.

00:04:15.750 --> 00:04:18.550 align:middle line:84%
Next, we will add the
student and class record maps

00:04:18.550 --> 00:04:20.480 align:middle line:90%
to this complex record map.

00:04:20.480 --> 00:04:24.210 align:middle line:84%
So we'll click on
the green + sign.

00:04:24.210 --> 00:04:28.480 align:middle line:84%
And our new record
will be called Student.

00:04:28.480 --> 00:04:34.660 align:middle line:84%
And we will use the Student
record map already defined.

00:04:34.660 --> 00:04:42.090 align:middle line:84%
And similarly, we will
add a Class record,

00:04:42.090 --> 00:04:44.600 align:middle line:90%
using the ClassInfo record map.

00:04:44.600 --> 00:04:46.490 align:middle line:84%
And this one repeats
because there

00:04:46.490 --> 00:04:49.140 align:middle line:84%
could be more than one
class that the student is

00:04:49.140 --> 00:04:50.870 align:middle line:90%
taking in this semester.

00:04:50.870 --> 00:04:55.780 align:middle line:84%
We will now save our complex
record map definition

00:04:55.780 --> 00:04:57.596 align:middle line:84%
and generate the
appropriate classes.

00:04:57.596 --> 00:05:01.690 align:middle line:90%


00:05:01.690 --> 00:05:03.530 align:middle line:84%
Let's take a look at
another example that's

00:05:03.530 --> 00:05:07.160 align:middle line:84%
slightly more realistic, but
still a very simple example.

00:05:07.160 --> 00:05:11.650 align:middle line:84%
This file has the same structure
as the OneStudent example.

00:05:11.650 --> 00:05:13.760 align:middle line:84%
However, we have
multiple students

00:05:13.760 --> 00:05:16.650 align:middle line:84%
each taking multiple
classes within the semester.

00:05:16.650 --> 00:05:20.140 align:middle line:84%
So we need a slightly different
complex record map definition

00:05:20.140 --> 00:05:20.940 align:middle line:90%
for this.

00:05:20.940 --> 00:05:24.390 align:middle line:84%
So we will create a new
complex record definition.

00:05:24.390 --> 00:05:28.320 align:middle line:84%
And this one will be called
eLearning.ManyStudents.

00:05:28.320 --> 00:05:33.900 align:middle line:90%


00:05:33.900 --> 00:05:36.060 align:middle line:84%
The header will be
the same as before.

00:05:36.060 --> 00:05:46.550 align:middle line:90%


00:05:46.550 --> 00:05:52.210 align:middle line:84%
Now, we will add an
element called Students.

00:05:52.210 --> 00:05:55.990 align:middle line:84%
And we'll make this
a repeating sequence.

00:05:55.990 --> 00:05:58.890 align:middle line:90%


00:05:58.890 --> 00:06:02.080 align:middle line:84%
Within the student's
sequence, we

00:06:02.080 --> 00:06:09.010 align:middle line:84%
will add one record for the
student using the Student

00:06:09.010 --> 00:06:19.260 align:middle line:84%
record map, and another
for the classes,

00:06:19.260 --> 00:06:22.400 align:middle line:84%
using the ClassInfo,
which could be repeating

00:06:22.400 --> 00:06:25.660 align:middle line:90%
within the student's sequence.

00:06:25.660 --> 00:06:34.000 align:middle line:84%
We will save this and
generate the classes.

00:06:34.000 --> 00:06:37.320 align:middle line:84%
Now, let's look at how we
would use this in a Production.

00:06:37.320 --> 00:06:39.850 align:middle line:84%
For Complex Record
Maps, we provide

00:06:39.850 --> 00:06:44.300 align:middle line:84%
file and FTP Business Services
and Business Operations.

00:06:44.300 --> 00:06:46.590 align:middle line:84%
Unlike the ordinary
Record Mapper,

00:06:46.590 --> 00:06:49.880 align:middle line:84%
all Complex Record Maps
are treated as batches.

00:06:49.880 --> 00:06:54.680 align:middle line:84%
So the only options are the
batch Services and Operations.

00:06:54.680 --> 00:07:00.680 align:middle line:84%
So let's open up an existing
Production that is empty.

00:07:00.680 --> 00:07:04.090 align:middle line:84%
Let's first add
Business Operation.

00:07:04.090 --> 00:07:13.387 align:middle line:84%
That will utilize
the EnsLib.RecordMap

00:07:13.387 --> 00:07:14.970 align:middle line:84%
.Operation.Compl
exBatchFileOperation.

00:07:14.970 --> 00:07:21.070 align:middle line:84%
We will call this operation
CollegeDataOut and enable it.

00:07:21.070 --> 00:07:25.390 align:middle line:90%


00:07:25.390 --> 00:07:29.580 align:middle line:84%
There are some additional
settings that we need to apply.

00:07:29.580 --> 00:07:35.280 align:middle line:84%
The file path for the
output information will be

00:07:35.280 --> 00:07:38.140 align:middle line:90%
c:ComplexDataOut.

00:07:38.140 --> 00:07:42.440 align:middle line:84%
The file name will be %f, so we
have the name of the original

00:07:42.440 --> 00:07:43.840 align:middle line:90%
file.

00:07:43.840 --> 00:07:51.030 align:middle line:84%
And the complex map to be used
will be eLearning.ManyStudents.

00:07:51.030 --> 00:07:54.130 align:middle line:90%
And we will apply our changes.

00:07:54.130 --> 00:07:58.650 align:middle line:84%
Next, we will add a Business
Service that will utilize

00:07:58.650 --> 00:08:05.192 align:middle line:84%
the EnsLib.RecordMap
.Service.Complex

00:08:05.192 --> 00:08:05.900 align:middle line:90%
BatchFileService.

00:08:05.900 --> 00:08:11.440 align:middle line:84%
And the service name
will be CollegeDataIn.

00:08:11.440 --> 00:08:12.535 align:middle line:90%
This will also be enabled.

00:08:12.535 --> 00:08:17.960 align:middle line:90%


00:08:17.960 --> 00:08:22.800 align:middle line:84%
And we will utilize
the same complex map.

00:08:22.800 --> 00:08:27.890 align:middle line:90%


00:08:27.890 --> 00:08:30.960 align:middle line:84%
The Target Config will
be CollegeDataOut.

00:08:30.960 --> 00:08:33.740 align:middle line:90%


00:08:33.740 --> 00:08:37.659 align:middle line:90%
The file path is ComplexDataIn.

00:08:37.659 --> 00:08:41.289 align:middle line:90%


00:08:41.289 --> 00:08:45.430 align:middle line:84%
And the File Spec is
anything that ends in .txt.

00:08:45.430 --> 00:08:49.720 align:middle line:90%


00:08:49.720 --> 00:08:52.280 align:middle line:84%
Let's briefly look at
the directory structure

00:08:52.280 --> 00:08:55.750 align:middle line:84%
where we have our complex data
directory with the In and Out

00:08:55.750 --> 00:08:56.530 align:middle line:90%
directories.

00:08:56.530 --> 00:08:58.370 align:middle line:84%
And in the complex
data In Director,

00:08:58.370 --> 00:09:01.660 align:middle line:84%
we have the ManyStudents text
file that we have previously

00:09:01.660 --> 00:09:02.780 align:middle line:90%
examined.

00:09:02.780 --> 00:09:05.080 align:middle line:84%
Let's start the
production, which will only

00:09:05.080 --> 00:09:08.210 align:middle line:84%
pick up the text file
from the In Directory

00:09:08.210 --> 00:09:11.040 align:middle line:84%
and move it to
the Out Directory.

00:09:11.040 --> 00:09:13.620 align:middle line:84%
If we now examine
our In Directory,

00:09:13.620 --> 00:09:15.430 align:middle line:90%
we will see that it is empty.

00:09:15.430 --> 00:09:18.500 align:middle line:84%
And the Out Directory now
contains the ManyStudents

00:09:18.500 --> 00:09:20.080 align:middle line:90%
complex record.

00:09:20.080 --> 00:09:23.460 align:middle line:84%
In a real application, you
will have Business Processes

00:09:23.460 --> 00:09:28.800 align:middle line:84%
to deal with the complex record
data that has been read in.

00:09:28.800 --> 00:09:31.290 align:middle line:84%
You have been watching
the eLearning session,

00:09:31.290 --> 00:09:36.080 align:middle line:84%
Getting Started with
Ensemble: Complex Record Maps.